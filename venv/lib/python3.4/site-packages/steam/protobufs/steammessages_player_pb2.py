# Generated by the protocol buffer compiler.  DO NOT EDIT!
# source: steammessages_player.proto

import sys
_b=sys.version_info[0]<3 and (lambda x:x) or (lambda x:x.encode('latin1'))
from google.protobuf import descriptor as _descriptor
from google.protobuf import message as _message
from google.protobuf import reflection as _reflection
from google.protobuf import symbol_database as _symbol_database
from google.protobuf import service as _service
from google.protobuf import service_reflection
from google.protobuf import descriptor_pb2
# @@protoc_insertion_point(imports)

_sym_db = _symbol_database.Default()


import steam.protobufs.steammessages_unified_base_pb2 as steammessages__unified__base__pb2


DESCRIPTOR = _descriptor.FileDescriptor(
  name='steammessages_player.proto',
  package='',
  syntax='proto2',
  serialized_pb=_b('\n\x1asteammessages_player.proto\x1a steammessages_unified_base.proto\"3\n\"CPlayer_GetGameBadgeLevels_Request\x12\r\n\x05\x61ppid\x18\x01 \x01(\r\"\xb5\x01\n#CPlayer_GetGameBadgeLevels_Response\x12\x14\n\x0cplayer_level\x18\x01 \x01(\r\x12:\n\x06\x62\x61\x64ges\x18\x02 \x03(\x0b\x32*.CPlayer_GetGameBadgeLevels_Response.Badge\x1a<\n\x05\x42\x61\x64ge\x12\r\n\x05level\x18\x01 \x01(\x05\x12\x0e\n\x06series\x18\x02 \x01(\x05\x12\x14\n\x0c\x62order_color\x18\x03 \x01(\r\"\x82\x01\n\"CPlayer_GetLastPlayedTimes_Request\x12\\\n\x0fmin_last_played\x18\x01 \x01(\rBC\x82\xb5\x18?The most recent last-played time the client already knows about\"\xc0\x01\n#CPlayer_GetLastPlayedTimes_Response\x12\x38\n\x05games\x18\x01 \x03(\x0b\x32).CPlayer_GetLastPlayedTimes_Response.Game\x1a_\n\x04Game\x12\r\n\x05\x61ppid\x18\x01 \x01(\x05\x12\x15\n\rlast_playtime\x18\x02 \x01(\r\x12\x17\n\x0fplaytime_2weeks\x18\x03 \x01(\x05\x12\x18\n\x10playtime_forever\x18\x04 \x01(\x05\"\x1b\n\x19\x43Player_AcceptSSA_Request\"\x1c\n\x1a\x43Player_AcceptSSA_Response\"`\n$CPlayer_LastPlayedTimes_Notification\x12\x38\n\x05games\x18\x01 \x03(\x0b\x32).CPlayer_GetLastPlayedTimes_Response.Game2\xed\x03\n\x06Player\x12\xb6\x01\n\x12GetGameBadgeLevels\x12#.CPlayer_GetGameBadgeLevels_Request\x1a$.CPlayer_GetGameBadgeLevels_Response\"U\x82\xb5\x18QReturns the Steam Level of a user, the Badge level for the game, and if it\'s foil\x12\x95\x01\n\x18\x43lientGetLastPlayedTimes\x12#.CPlayer_GetLastPlayedTimes_Request\x1a$.CPlayer_GetLastPlayedTimes_Response\".\x82\xb5\x18*Gets the last-played times for the account\x12\x63\n\tAcceptSSA\x12\x1a.CPlayer_AcceptSSA_Request\x1a\x1b.CPlayer_AcceptSSA_Response\"\x1d\x82\xb5\x18\x19User is accepting the SSA\x1a-\x82\xb5\x18)A service for accessing Steam player data2\xcd\x01\n\x0cPlayerClient\x12\x8c\x01\n\x15NotifyLastPlayedTimes\x12%.CPlayer_LastPlayedTimes_Notification\x1a\x0b.NoResponse\"?\x82\xb5\x18;Notification from server to client of more recent play time\x1a.\x82\xb5\x18&Steam player data client notifications\xc0\xb5\x18\x02\x42\x03\x90\x01\x01')
  ,
  dependencies=[steammessages__unified__base__pb2.DESCRIPTOR,])
_sym_db.RegisterFileDescriptor(DESCRIPTOR)




_CPLAYER_GETGAMEBADGELEVELS_REQUEST = _descriptor.Descriptor(
  name='CPlayer_GetGameBadgeLevels_Request',
  full_name='CPlayer_GetGameBadgeLevels_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='appid', full_name='CPlayer_GetGameBadgeLevels_Request.appid', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=64,
  serialized_end=115,
)


_CPLAYER_GETGAMEBADGELEVELS_RESPONSE_BADGE = _descriptor.Descriptor(
  name='Badge',
  full_name='CPlayer_GetGameBadgeLevels_Response.Badge',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='level', full_name='CPlayer_GetGameBadgeLevels_Response.Badge.level', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='series', full_name='CPlayer_GetGameBadgeLevels_Response.Badge.series', index=1,
      number=2, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='border_color', full_name='CPlayer_GetGameBadgeLevels_Response.Badge.border_color', index=2,
      number=3, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=239,
  serialized_end=299,
)

_CPLAYER_GETGAMEBADGELEVELS_RESPONSE = _descriptor.Descriptor(
  name='CPlayer_GetGameBadgeLevels_Response',
  full_name='CPlayer_GetGameBadgeLevels_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='player_level', full_name='CPlayer_GetGameBadgeLevels_Response.player_level', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='badges', full_name='CPlayer_GetGameBadgeLevels_Response.badges', index=1,
      number=2, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CPLAYER_GETGAMEBADGELEVELS_RESPONSE_BADGE, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=118,
  serialized_end=299,
)


_CPLAYER_GETLASTPLAYEDTIMES_REQUEST = _descriptor.Descriptor(
  name='CPlayer_GetLastPlayedTimes_Request',
  full_name='CPlayer_GetLastPlayedTimes_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='min_last_played', full_name='CPlayer_GetLastPlayedTimes_Request.min_last_played', index=0,
      number=1, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=_descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\202\265\030?The most recent last-played time the client already knows about'))),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=302,
  serialized_end=432,
)


_CPLAYER_GETLASTPLAYEDTIMES_RESPONSE_GAME = _descriptor.Descriptor(
  name='Game',
  full_name='CPlayer_GetLastPlayedTimes_Response.Game',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='appid', full_name='CPlayer_GetLastPlayedTimes_Response.Game.appid', index=0,
      number=1, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='last_playtime', full_name='CPlayer_GetLastPlayedTimes_Response.Game.last_playtime', index=1,
      number=2, type=13, cpp_type=3, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='playtime_2weeks', full_name='CPlayer_GetLastPlayedTimes_Response.Game.playtime_2weeks', index=2,
      number=3, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
    _descriptor.FieldDescriptor(
      name='playtime_forever', full_name='CPlayer_GetLastPlayedTimes_Response.Game.playtime_forever', index=3,
      number=4, type=5, cpp_type=1, label=1,
      has_default_value=False, default_value=0,
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=532,
  serialized_end=627,
)

_CPLAYER_GETLASTPLAYEDTIMES_RESPONSE = _descriptor.Descriptor(
  name='CPlayer_GetLastPlayedTimes_Response',
  full_name='CPlayer_GetLastPlayedTimes_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='games', full_name='CPlayer_GetLastPlayedTimes_Response.games', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[_CPLAYER_GETLASTPLAYEDTIMES_RESPONSE_GAME, ],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=435,
  serialized_end=627,
)


_CPLAYER_ACCEPTSSA_REQUEST = _descriptor.Descriptor(
  name='CPlayer_AcceptSSA_Request',
  full_name='CPlayer_AcceptSSA_Request',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=629,
  serialized_end=656,
)


_CPLAYER_ACCEPTSSA_RESPONSE = _descriptor.Descriptor(
  name='CPlayer_AcceptSSA_Response',
  full_name='CPlayer_AcceptSSA_Response',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=658,
  serialized_end=686,
)


_CPLAYER_LASTPLAYEDTIMES_NOTIFICATION = _descriptor.Descriptor(
  name='CPlayer_LastPlayedTimes_Notification',
  full_name='CPlayer_LastPlayedTimes_Notification',
  filename=None,
  file=DESCRIPTOR,
  containing_type=None,
  fields=[
    _descriptor.FieldDescriptor(
      name='games', full_name='CPlayer_LastPlayedTimes_Notification.games', index=0,
      number=1, type=11, cpp_type=10, label=3,
      has_default_value=False, default_value=[],
      message_type=None, enum_type=None, containing_type=None,
      is_extension=False, extension_scope=None,
      options=None),
  ],
  extensions=[
  ],
  nested_types=[],
  enum_types=[
  ],
  options=None,
  is_extendable=False,
  syntax='proto2',
  extension_ranges=[],
  oneofs=[
  ],
  serialized_start=688,
  serialized_end=784,
)

_CPLAYER_GETGAMEBADGELEVELS_RESPONSE_BADGE.containing_type = _CPLAYER_GETGAMEBADGELEVELS_RESPONSE
_CPLAYER_GETGAMEBADGELEVELS_RESPONSE.fields_by_name['badges'].message_type = _CPLAYER_GETGAMEBADGELEVELS_RESPONSE_BADGE
_CPLAYER_GETLASTPLAYEDTIMES_RESPONSE_GAME.containing_type = _CPLAYER_GETLASTPLAYEDTIMES_RESPONSE
_CPLAYER_GETLASTPLAYEDTIMES_RESPONSE.fields_by_name['games'].message_type = _CPLAYER_GETLASTPLAYEDTIMES_RESPONSE_GAME
_CPLAYER_LASTPLAYEDTIMES_NOTIFICATION.fields_by_name['games'].message_type = _CPLAYER_GETLASTPLAYEDTIMES_RESPONSE_GAME
DESCRIPTOR.message_types_by_name['CPlayer_GetGameBadgeLevels_Request'] = _CPLAYER_GETGAMEBADGELEVELS_REQUEST
DESCRIPTOR.message_types_by_name['CPlayer_GetGameBadgeLevels_Response'] = _CPLAYER_GETGAMEBADGELEVELS_RESPONSE
DESCRIPTOR.message_types_by_name['CPlayer_GetLastPlayedTimes_Request'] = _CPLAYER_GETLASTPLAYEDTIMES_REQUEST
DESCRIPTOR.message_types_by_name['CPlayer_GetLastPlayedTimes_Response'] = _CPLAYER_GETLASTPLAYEDTIMES_RESPONSE
DESCRIPTOR.message_types_by_name['CPlayer_AcceptSSA_Request'] = _CPLAYER_ACCEPTSSA_REQUEST
DESCRIPTOR.message_types_by_name['CPlayer_AcceptSSA_Response'] = _CPLAYER_ACCEPTSSA_RESPONSE
DESCRIPTOR.message_types_by_name['CPlayer_LastPlayedTimes_Notification'] = _CPLAYER_LASTPLAYEDTIMES_NOTIFICATION

CPlayer_GetGameBadgeLevels_Request = _reflection.GeneratedProtocolMessageType('CPlayer_GetGameBadgeLevels_Request', (_message.Message,), dict(
  DESCRIPTOR = _CPLAYER_GETGAMEBADGELEVELS_REQUEST,
  __module__ = 'steammessages_player_pb2'
  # @@protoc_insertion_point(class_scope:CPlayer_GetGameBadgeLevels_Request)
  ))
_sym_db.RegisterMessage(CPlayer_GetGameBadgeLevels_Request)

CPlayer_GetGameBadgeLevels_Response = _reflection.GeneratedProtocolMessageType('CPlayer_GetGameBadgeLevels_Response', (_message.Message,), dict(

  Badge = _reflection.GeneratedProtocolMessageType('Badge', (_message.Message,), dict(
    DESCRIPTOR = _CPLAYER_GETGAMEBADGELEVELS_RESPONSE_BADGE,
    __module__ = 'steammessages_player_pb2'
    # @@protoc_insertion_point(class_scope:CPlayer_GetGameBadgeLevels_Response.Badge)
    ))
  ,
  DESCRIPTOR = _CPLAYER_GETGAMEBADGELEVELS_RESPONSE,
  __module__ = 'steammessages_player_pb2'
  # @@protoc_insertion_point(class_scope:CPlayer_GetGameBadgeLevels_Response)
  ))
_sym_db.RegisterMessage(CPlayer_GetGameBadgeLevels_Response)
_sym_db.RegisterMessage(CPlayer_GetGameBadgeLevels_Response.Badge)

CPlayer_GetLastPlayedTimes_Request = _reflection.GeneratedProtocolMessageType('CPlayer_GetLastPlayedTimes_Request', (_message.Message,), dict(
  DESCRIPTOR = _CPLAYER_GETLASTPLAYEDTIMES_REQUEST,
  __module__ = 'steammessages_player_pb2'
  # @@protoc_insertion_point(class_scope:CPlayer_GetLastPlayedTimes_Request)
  ))
_sym_db.RegisterMessage(CPlayer_GetLastPlayedTimes_Request)

CPlayer_GetLastPlayedTimes_Response = _reflection.GeneratedProtocolMessageType('CPlayer_GetLastPlayedTimes_Response', (_message.Message,), dict(

  Game = _reflection.GeneratedProtocolMessageType('Game', (_message.Message,), dict(
    DESCRIPTOR = _CPLAYER_GETLASTPLAYEDTIMES_RESPONSE_GAME,
    __module__ = 'steammessages_player_pb2'
    # @@protoc_insertion_point(class_scope:CPlayer_GetLastPlayedTimes_Response.Game)
    ))
  ,
  DESCRIPTOR = _CPLAYER_GETLASTPLAYEDTIMES_RESPONSE,
  __module__ = 'steammessages_player_pb2'
  # @@protoc_insertion_point(class_scope:CPlayer_GetLastPlayedTimes_Response)
  ))
_sym_db.RegisterMessage(CPlayer_GetLastPlayedTimes_Response)
_sym_db.RegisterMessage(CPlayer_GetLastPlayedTimes_Response.Game)

CPlayer_AcceptSSA_Request = _reflection.GeneratedProtocolMessageType('CPlayer_AcceptSSA_Request', (_message.Message,), dict(
  DESCRIPTOR = _CPLAYER_ACCEPTSSA_REQUEST,
  __module__ = 'steammessages_player_pb2'
  # @@protoc_insertion_point(class_scope:CPlayer_AcceptSSA_Request)
  ))
_sym_db.RegisterMessage(CPlayer_AcceptSSA_Request)

CPlayer_AcceptSSA_Response = _reflection.GeneratedProtocolMessageType('CPlayer_AcceptSSA_Response', (_message.Message,), dict(
  DESCRIPTOR = _CPLAYER_ACCEPTSSA_RESPONSE,
  __module__ = 'steammessages_player_pb2'
  # @@protoc_insertion_point(class_scope:CPlayer_AcceptSSA_Response)
  ))
_sym_db.RegisterMessage(CPlayer_AcceptSSA_Response)

CPlayer_LastPlayedTimes_Notification = _reflection.GeneratedProtocolMessageType('CPlayer_LastPlayedTimes_Notification', (_message.Message,), dict(
  DESCRIPTOR = _CPLAYER_LASTPLAYEDTIMES_NOTIFICATION,
  __module__ = 'steammessages_player_pb2'
  # @@protoc_insertion_point(class_scope:CPlayer_LastPlayedTimes_Notification)
  ))
_sym_db.RegisterMessage(CPlayer_LastPlayedTimes_Notification)


DESCRIPTOR.has_options = True
DESCRIPTOR._options = _descriptor._ParseOptions(descriptor_pb2.FileOptions(), _b('\220\001\001'))
_CPLAYER_GETLASTPLAYEDTIMES_REQUEST.fields_by_name['min_last_played'].has_options = True
_CPLAYER_GETLASTPLAYEDTIMES_REQUEST.fields_by_name['min_last_played']._options = _descriptor._ParseOptions(descriptor_pb2.FieldOptions(), _b('\202\265\030?The most recent last-played time the client already knows about'))

_PLAYER = _descriptor.ServiceDescriptor(
  name='Player',
  full_name='Player',
  file=DESCRIPTOR,
  index=0,
  options=_descriptor._ParseOptions(descriptor_pb2.ServiceOptions(), _b('\202\265\030)A service for accessing Steam player data')),
  serialized_start=787,
  serialized_end=1280,
  methods=[
  _descriptor.MethodDescriptor(
    name='GetGameBadgeLevels',
    full_name='Player.GetGameBadgeLevels',
    index=0,
    containing_service=None,
    input_type=_CPLAYER_GETGAMEBADGELEVELS_REQUEST,
    output_type=_CPLAYER_GETGAMEBADGELEVELS_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\030QReturns the Steam Level of a user, the Badge level for the game, and if it\'s foil')),
  ),
  _descriptor.MethodDescriptor(
    name='ClientGetLastPlayedTimes',
    full_name='Player.ClientGetLastPlayedTimes',
    index=1,
    containing_service=None,
    input_type=_CPLAYER_GETLASTPLAYEDTIMES_REQUEST,
    output_type=_CPLAYER_GETLASTPLAYEDTIMES_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\030*Gets the last-played times for the account')),
  ),
  _descriptor.MethodDescriptor(
    name='AcceptSSA',
    full_name='Player.AcceptSSA',
    index=2,
    containing_service=None,
    input_type=_CPLAYER_ACCEPTSSA_REQUEST,
    output_type=_CPLAYER_ACCEPTSSA_RESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\030\031User is accepting the SSA')),
  ),
])

Player = service_reflection.GeneratedServiceType('Player', (_service.Service,), dict(
  DESCRIPTOR = _PLAYER,
  __module__ = 'steammessages_player_pb2'
  ))

Player_Stub = service_reflection.GeneratedServiceStubType('Player_Stub', (Player,), dict(
  DESCRIPTOR = _PLAYER,
  __module__ = 'steammessages_player_pb2'
  ))



_PLAYERCLIENT = _descriptor.ServiceDescriptor(
  name='PlayerClient',
  full_name='PlayerClient',
  file=DESCRIPTOR,
  index=1,
  options=_descriptor._ParseOptions(descriptor_pb2.ServiceOptions(), _b('\202\265\030&Steam player data client notifications\300\265\030\002')),
  serialized_start=1283,
  serialized_end=1488,
  methods=[
  _descriptor.MethodDescriptor(
    name='NotifyLastPlayedTimes',
    full_name='PlayerClient.NotifyLastPlayedTimes',
    index=0,
    containing_service=None,
    input_type=_CPLAYER_LASTPLAYEDTIMES_NOTIFICATION,
    output_type=steammessages__unified__base__pb2._NORESPONSE,
    options=_descriptor._ParseOptions(descriptor_pb2.MethodOptions(), _b('\202\265\030;Notification from server to client of more recent play time')),
  ),
])

PlayerClient = service_reflection.GeneratedServiceType('PlayerClient', (_service.Service,), dict(
  DESCRIPTOR = _PLAYERCLIENT,
  __module__ = 'steammessages_player_pb2'
  ))

PlayerClient_Stub = service_reflection.GeneratedServiceStubType('PlayerClient_Stub', (PlayerClient,), dict(
  DESCRIPTOR = _PLAYERCLIENT,
  __module__ = 'steammessages_player_pb2'
  ))


# @@protoc_insertion_point(module_scope)
